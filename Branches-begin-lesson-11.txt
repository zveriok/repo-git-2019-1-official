// -------------------------------
Branches
// -------------------------------


git branch
Показать ветки (* показывает на какой я ветке сейчас)


git branch my_branch_name
Создание ветки


git checkout my_branch_name
Переход на ветку

git checkout -b my_branch_name
Создать ветку и перейти на нее в одну команду


git branch -d my_branch_name
Удаление ветки


git checkout 23573853473904831434
Переход на один из предыдущих коммитов


git reset --hard HEAD~2
Стиреть с лица земли 2 последних коммита и вернуться в состояние до них

git reset --soft HEAD~2
Стиреть только сообщения о коммитах, а фаилы останутся без изменений


git push --set-upstream origin <branch-name>

// -------------------------------
Практика 2-го прогера
// -------------------------------
git branch branch_of_secong_programmer_Vasia



// -------------------------------
Практика 1-го прогера
// ---------------------------------

git branch branch_of_First_programmer_Vadim
git checkout branch_of_First_programmer_Vadim
git branch
git add .
git commit -am "Commit of First programmer to Vadim branch"
git push (выдаст подсказку)
git push --set-upstream origin branch_of_First_programmer_Vadim

// -------------------------------
(1й программист - Vadim ) Забрать слитую в веб интерфейсе версию
// -------------------------------
Так как я сделал какие-то изменения, то git pull мне не дали

http://qaru.site/questions/16829/git-undo-all-uncommitted-changes

git reset
git checkout .
git clean -fdx

git pull (сработало, и был promt в vim чтобы назвать коммит, видимо я из него неправильно вышел)

hint: Waiting for your editor to close the file... error: There was a problem with the editor 'vi'.
Not committing merge; use 'git commit' to complete the merge.


// -------------------------------
(2-й программист - Vasia ) Забрать слитую в веб интерфейсе версию
// -------------------------------

Здесь видимо сделал правильнее

git status
Перейдем на главную ветвь
  267  git branch
  268  git checkout master
  Сбросим изменения и отложим их в какую-то там папку
  270  git stash
  Теперь получится переключится на master
  271  git checkout master
  272  git branch
  Теперь получится pull
  273  git pull
  274  git status




// -------------------------------
Вывод
// -------------------------------


1) Если человек после своего последнего коммита не делал никаких изменений, то видимо он легко может сделать git pull

Ответ

###
MacBook-Pro-Vadim:repo-git-2019-1-official baumvad$ git pull
remote: Enumerating objects: 10, done.
remote: Counting objects: 100% (10/10), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 6 (delta 4), reused 6 (delta 4), pack-reused 0
Unpacking objects: 100% (6/6), done.
From https://github.com/zveriok/repo-git-2019-1-official
   22a82d1..3cbf8f6  master     -> origin/master
Updating 22a82d1..3cbf8f6
Fast-forward
 Branches-begin-lesson-11.txt | 26 +++++++++++++++++++++++---
 1 file changed, 23 insertions(+), 3 deletions(-)

###

2) Если изменения были сделаны  и их надо игнорировать, то нужно
(Если ты уже на master)
git stash
git pull

3) Если хочешь сохранить эти изменениято выводи их в отдельную ветвь, решай конфликты на сайте и потом тяни оттуда


4) Всегда можно заново сделать git clone или его аналог
http://qaru.site/questions/16829/git-undo-all-uncommitted-changes



// -------------------------------
Инструкция для pull без конфликтов
// -------------------------------


string1= "Наш царь Мукден,  Наш царь Цусима!"



