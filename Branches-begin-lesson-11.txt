// -------------------------------
Branches
// -------------------------------


git branch
Показать ветки (* показывает на какой я ветке сейчас)


git branch my_branch_name
Создание ветки


git checkout my_branch_name
Переход на ветку

git checkout -b my_branch_name
Создать ветку и перейти на нее в одну команду


git branch -d my_branch_name
Удаление ветки


git checkout 23573853473904831434
Переход на один из предыдущих коммитов


git reset --hard HEAD~2
Стиреть с лица земли 2 последних коммита и вернуться в состояние до них

git reset --soft HEAD~2
Стиреть только сообщения о коммитах, а фаилы останутся без изменений


git push --set-upstream origin <branch-name>

// -------------------------------
Практика 2-го прогера
// -------------------------------
git branch branch_of_secong_programmer_Vasia



// -------------------------------
Практика 1-го прогера
// ---------------------------------

git branch branch_of_First_programmer_Vadim
git checkout branch_of_First_programmer_Vadim
git branch
git add .
git commit -am "Commit of First programmer to Vadim branch"
git push (выдаст подсказку)
git push --set-upstream origin branch_of_First_programmer_Vadim




// -------------------------------
(2-й программист - Vasia ) Забрать слитую в веб интерфейсе версию
// -------------------------------

Здесь видимо сделал правильнее

git status
Перейдем на главную ветвь
  267  git branch
  268  git checkout master
  Сбросим изменения и отложим их в какую-то там папку
  270  git stash
  Теперь получится переключится на master
  271  git checkout master
  272  git branch
  Теперь получится pull
  273  git pull
  274  git status
